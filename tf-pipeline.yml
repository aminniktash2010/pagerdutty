trigger:
  branches:
    exclude:
      - '*'

pr:
  branches:
    include:
      - main

variables:
  terraform_version: '1.0.0'
  key_vault_name: 'your-key-vault-name'
  secret_name: 'pagerduty-api-token'

stages:
  - stage: Plan
    displayName: "Terraform Plan"
    jobs:
      - job: terraformPlan
        displayName: "Terraform Plan"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true

          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'your-azure-subscription'
              KeyVaultName: '$(key_vault_name)'
              SecretsFilter: '$(secret_name)'
              RunAsPreJob: true

          - script: |
              terraform init
            displayName: "Terraform Init"
            env:
              PAGERDUTY_API_TOKEN: $(pagerduty-api-token)

          - script: |
              terraform plan -out=tfplan
            displayName: "Terraform Plan"
            env:
              PAGERDUTY_API_TOKEN: $(pagerduty-api-token)

          - script: |
              terraform show -json tfplan > plan.json
            displayName: "Save Plan to JSON"

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/plan.json'
              artifactName: 'tfplan'
              publishLocation: 'pipeline'
            displayName: "Publish Terraform Plan Artifact"

  - stage: Apply
    displayName: "Terraform Apply"
    dependsOn: Plan
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    jobs:
      - job: terraformApply
        displayName: "Terraform Apply"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true

          - download: current
            artifact: tfplan
            displayName: "Download Terraform Plan Artifact"

          - script: |
              terraform init
            displayName: "Terraform Init"
            env:
              PAGERDUTY_API_TOKEN: $(pagerduty-api-token)

          - script: |
              terraform apply -auto-approve plan.json
            displayName: "Terraform Apply"
            env:
              PAGERDUTY_API_TOKEN: $(pagerduty-api-token)
